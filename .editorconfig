[*.cs]

# CA1303: Do not pass literals as localized parameters
# dotnet_diagnostic.CA1303.severity = none

## Use Upper Case for constant fields  
##dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
##dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols  = constant_fields
##dotnet_naming_rule.constant_fields_should_be_pascal_case.style    = pascal_case_style
#dotnet_naming_style.upper_case_style.capitalization = all_upper
#dotnet_naming_style.upper_case_style.word_separator = _
#dotnet_naming_rule.constant_fields_should_be_upper_case.severity = warning
#dotnet_naming_rule.constant_fields_should_be_upper_case.symbols  = constant_fields
#dotnet_naming_rule.constant_fields_should_be_upper_case.style    = upper_case_style
#dotnet_naming_symbols.constant_fields.applicable_kinds            = field
#dotnet_naming_symbols.constant_fields.applicable_accessibilities  = *
#dotnet_naming_symbols.constant_fields.required_modifiers          = const

# CA1707: Use Upper Case for constant fields  // Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = silent

[*.{cs,vb}]
#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case
